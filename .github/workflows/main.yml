name: goproxy-frontend-workflow
on:
  push:
    branches:
      - main

jobs:
  version-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9
        with:
          versionSpec: '5.x'

      - name: Generate Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9

      - name: Tag and Push Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag $(echo ${{ steps.gitversion.outputs.semver }})
          git push origin $(echo ${{ steps.gitversion.outputs.semver }})

  build-image:
    runs-on: ubuntu-latest
    needs: [version-and-tag]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version from Git
        id: get_version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Tag Docker Image
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          docker build -t nlipatov/goproxy-frontend:${VERSION} .
          docker tag nlipatov/goproxy-frontend:${VERSION} nlipatov/goproxy-frontend:latest

      - name: Push Docker Images
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          docker push nlipatov/goproxy-frontend:${VERSION}
          docker push nlipatov/goproxy-frontend:latest
